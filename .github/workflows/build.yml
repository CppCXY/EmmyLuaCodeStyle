name: Build

on: 
  push:
    branches:
      - master
	  - arm-build
    tags:
      - "*.*.*"

jobs:
  build-arm:	
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
      ref: refs/heads/master
    - name: install gcc 11
      run: |
        sudo apt-get install -y gcc-11-arm-linux-gnueabi g++-11-arm-linux-gnueabi
        echo "CC=gcc-11-arm-linux-gnueabi" >> $GITHUB_ENV
        echo "CXX=g++-11-arm-linux-gnueabi" >> $GITHUB_ENV
    - name: Build
      run: | 
	  	mkdir build
		cd build
		cmake ..
		cmake --build . --config Release
		ctest -V -C Release
		cmake --install . --config Release --prefix ${{ github.workspace }}/artifact/
    - name: Upload
      uses: actions/upload-artifact@v2
      with: 
        name: linux-arm
        path: ${{ github.workspace }}/artifact/

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-latest, target: linux, platform: linux-x64}
          - { os: macos-latest, target: darwin, platform: darwin-x64}
          - { os: macos-latest, target: darwin, platform: darwin-arm64}
          - { os: windows-latest, target: windows, platform: win32-x64}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: refs/heads/master
    - name: install gcc 11
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get install -y gcc-11 g++-11
        echo "CC=gcc-11" >> $GITHUB_ENV
        echo "CXX=g++-11" >> $GITHUB_ENV
    - name: Build
      run: | 
            mkdir build
            cd build
            cmake ..
            cmake --build . --config Release
            ctest -V -C Release
            cmake --install . --config Release --prefix ${{ github.workspace }}/artifact/
    - name: Upload
      uses: actions/upload-artifact@v2
      with: 
        name: ${{ matrix.platform }}
        path: ${{ github.workspace }}/artifact/
  release:
    name: Upload Release
    needs: [build]
    runs-on: [ubuntu-18.04]
    steps:
      - name: Download
        uses: actions/download-artifact@v2
      - name: Display structure of downloaded files
        run: ls -R
      - name: zip win32-x64
        uses: TheDoctor0/zip-release@v0.2.1
        with:
          filename: win32-x64.zip
          path: win32-x64
      - name: zip linux-x64
        uses: TheDoctor0/zip-release@v0.2.1
        with: 
          filename: linux-x64.zip
          path: linux-x64
      - name: zip darwin-x64
        uses: TheDoctor0/zip-release@v0.2.1
        with:
          filename: darwin-x64.zip
          path: darwin-x64
      - name: zip darwin-arm64
        uses: TheDoctor0/zip-release@v0.2.1
        with: 
          filename: darwin-arm64.zip
          path: darwin-arm64

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: CodeFormat
          draft: false
          generate_release_notes: true
          files: |
            linux-x64.zip
            darwin-x64.zip
            darwin-arm64.zip
            win32-x64.zip
          token: ${{ secrets.RELEASE }}
